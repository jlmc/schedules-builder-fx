<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.xine</groupId>
		<artifactId>Qtime-table</artifactId>
		<version>0.0.1</version>
	</parent>
	<artifactId>Qtime-table-fxdesktop</artifactId>
	<name>Qtime-table-Fxdesktop</name>
	<packaging>jar</packaging>
	<url>https://github.com/SpoutDev/Platform</url>
	<inceptionYear>2012</inceptionYear>
	<description>Platform frontend, user interface, and launcher for the Spout voxel game engine.</description>


	<!-- Project developers -->
	<developers>
		<developer>
			<id>xine</id>
			<name>Joao Luis Costa</name>
			<email>costajlmpp@gmail.com</email>
		</developer>
	</developers>

	<!-- Build properties -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainClass>org.xine.qtime.fxdesktop.Launcher</mainClass>
		<log4j.version>1.2.16</log4j.version>
		<slf4j.version>1.6.4</slf4j.version>
		<slf4j.log4j12.version>1.7.7</slf4j.log4j12.version>
		<controlsfx.version>8.20.8</controlsfx.version>
		<guice-fx.version>0.0.1</guice-fx.version>
		<javafx.version>2.3+</javafx.version>
		<javafx.runtime.jar>${java.home}/lib/jfxrt.jar</javafx.runtime.jar>
		<javafx.ant.jar>${java.home}/../lib/ant-javafx.jar</javafx.ant.jar>
	</properties>
	
	<!-- License information -->
	<licenses>
		<license>
			<name>Spout LLC Copyright</name>
			<distribution>repo</distribution>
			<comments>All Rights Reserved, unless otherwise granted permission.</comments>
		</license>
	</licenses>

	<!-- Organization information -->
	<organization>
		<name>Spout LLC</name>
		<url>http://www.spout.org</url>
	</organization>

	<dependencies>
		<!-- FXML Injection, reflection and anottation API -->
		<dependency>
			<groupId>org.xine</groupId>
			<artifactId>guice-fx</artifactId>
			<version>${guice-fx.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- http://code.makery.ch/blog/javafx-8-dialogs/ -->
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>${controlsfx.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- LOG API dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- project internal dependencies -->
		<dependency>
			<groupId>org.xine</groupId>
			<artifactId>Qtime-table-client-connector</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.xine</groupId>
			<artifactId>Qtime-table-client-connector-rest</artifactId>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<defaultGoal>clean jfx:jar</defaultGoal>
		<resources>
			<!-- Static resources -->
			<resource>
				<filtering>false</filtering>
				<directory>.</directory>
				<targetPath>.</targetPath>
				<includes>
					<include>LICENSE.txt</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<targetPath>org/xine/platform/resources</targetPath>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>app/*</exclude>
					<exclude>exe/*</exclude>
					<exclude>keystore.jks</exclude>
					<exclude>jalopy.xml</exclude>
				</excludes>
			</resource>
			<!-- Filtered resources -->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<targetPath>org/xine/platform/resources</targetPath>
				<includes>
					<include>version</include>
				</includes>
			</resource>
		</resources>
		
		<!-- Build plugins -->
		<plugins>
			<!-- License headers plugin -->
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.10.b1</version>
				<executions>
					<execution>
						<configuration>
							<properties>
								<name>${project.name}</name>
								<url>${project.organization.url}</url>
								<inceptionYear>${project.inceptionYear}</inceptionYear>
								<organization>${project.organization.name}</organization>
							</properties>
							<quiet>true</quiet>
							<encoding>UTF-8</encoding>
							<strictCheck>true</strictCheck>
							<header>HEADER.txt</header>
							<mapping>
								<java>SLASHSTAR_STYLE</java>
							</mapping>
							<keywords>
								<keyword>${project.name}</keyword>
								<keyword>CONFIDENTIAL</keyword>
							</keywords>
							<includes>
								<include>src/main/java/**</include>
								<include>src/test/java/**</include>
							</includes>
						</configuration>
						<phase>clean</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Source compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArguments>
						<O>-Xlint:all</O>
						<O>-Xlint:-path</O>
					</compilerArguments>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<!-- JavaFX assembly plugin -->
			<plugin>
				<groupId>com.zenjava</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<jfxMainAppJarName>${project.build.finalName}.jar</jfxMainAppJarName>
					<jfxAppOutputDir>${project.build.directory}</jfxAppOutputDir>
					<mainClass>${mainClass}</mainClass>
					<signJar>
						<keystore>${keystore.path}</keystore>
						<alias>${keystore.alias}</alias>
						<storePassword>${keystore.storepass}</storePassword>
						<keypass>${keystore.keypass}</keypass>
					</signJar>
				</configuration>
			</plugin>
			<!-- JAR signing plugin -->
<!-- 			<plugin> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-jarsigner-plugin</artifactId> -->
<!-- 				<version>1.2</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<configuration> -->
<!-- 							<keystore>${keystore.path}</keystore> -->
<!-- 							<alias>${keystore.alias}</alias> -->
<!-- 							<storepass>${keystore.storepass}</storepass> -->
<!-- 							<keypass>${keystore.keypass}</keypass> -->
<!-- 							<verbose>true</verbose> -->
<!-- 						</configuration> -->
<!-- 						<phase>package</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>sign</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
		</plugins>
	</build>
</project>